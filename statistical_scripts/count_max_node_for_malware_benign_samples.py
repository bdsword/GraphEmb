#!/usr/bin/env python3
import argparse
import os
import sys
from utils.graph_utils import extract_main_graph


def main(argv):
    parser = argparse.ArgumentParser(description='Create learning data for malware classification according to the given malware and benign samples.')
    parser.add_argument('--MalwareSamplesDir', help='Path to the target folder that contains malwares.', required=True)
    parser.add_argument('--BenignSamplesDir', help='Path to the target folder that contains benign wares.', required=True)
    args = parser.parse_args()

    for benign in os.listdir(args.BenignSamplesDir):
        benign_dir = os.path.join(args.BenignSamplesDir, benign)
        cg_path = os.path.join(benign_dir, benign + '.dot')
        if not os.path.isfile(cg_path):
            continue
        main_graph = extract_main_graph(cg_path)
        print(benign, len(main_graph))

    for malware in os.listdir(args.MalwareSamplesDir):
        malware_dir = os.path.join(args.MalwareSamplesDir, malware)
        cg_path = os.path.join(malware_dir, malware + '.dot')
        if not os.path.isfile(cg_path):
            continue
        main_graph = extract_main_graph(cg_path)
        print(malware, len(main_graph))


if __name__ == '__main__':
    main(sys.argv)

